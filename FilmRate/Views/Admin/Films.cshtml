@using FilmReview.Models

@{
    ViewBag.Title = "Films";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
    List<Film> MainList = Model as List<Film>;

}
<link href="~/Content/css/bootstrap-datepicker3.standalone.min.css" rel="stylesheet" />
<div id="myloader-wrapper" style="display: none;">
    <div id="myloader">
    </div>
</div>
<div class="row">
    <div class="col-2">
        <button class="btn btn-success" onclick="ShowNewFilmModal()">Add New Film</button>
    </div>
</div>
<table class="table table-striped table-dark">
    <thead>
        <tr>
            <th scope="col">ID</th>
            <th scope="col">FilmName</th>
            <th scope="col">Genre</th>
            <th scope="col">ReleaseDate</th>
            <th scope="col">Director</th>
            <th scope="col">Rate</th>
            <th class="text-center" scope="col">Edit</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Film film in MainList)
        {
            <tr>
                <td>@film.ID</td>
                <td>@film.FilmName</td>
                <td>@film.Genre</td>
                <td>@film.ReleaseDate</td>
                <td>@film.Director</td>
                <td>@film.Rate</td>
                <td class="text-center">
                    <div class="row">
                        <div class="col-md-3 offset-md-3">
                            <button class="btn btn-danger ml-3" onclick="DeleteFilm('@film.ID')"><i class="far fa-trash-alt"></i></button>
                        </div>
                        <div class="col-3">
                            <button class="btn btn-warning" onclick="EditFilm('@film.ID')"><i class="fas fa-edit"></i></button>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="modal fade" id="NewFilmModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="FilmModalTitle">New Film</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="FilmModalBody">
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroup-sizing-sm" style="width:118px">FilmName</span>
                    </div>
                    <input type="text" class="form-control" id="FilmName" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
                </div>
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroup-sizing-sm" style="width:118px">Genre</span>
                    </div>
                    <input type="text" class="form-control" id="Genre" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
                </div>

                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroup-sizing-sm" style="width:118px">Release Date</span>
                    </div>
                    <input type="text" value=@DateTime.Now.ToString("dd/MM/yyyy") class="form-control datepicker" aria-label="Small" name="ReleaseDate" id="ReleaseDate" aria-describedby="inputGroup-sizing-sm">
                </div>
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroup-sizing-sm" style="width:118px">Director</span>
                    </div>
                    <input type="text" class="form-control" id="Director" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
                </div>
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" style="width:118px">Film Description</span>
                    </div>
                    <textarea id="FilmDesc" class="form-control" aria-label="With textarea"></textarea>
                </div>
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroup-sizing-sm" style="width:118px">Trailer Link</span>
                    </div>
                    <input type="text" class="form-control" id="TrailerLink" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
                </div>
                <div class="custom-file mb-3">
                    <input type="file" class="custom-file-input" id="File1" aria-describedby="inputGroupFileAddon01">
                    <label class="custom-file-label" for="inputGroupFile01">Choose a Photo</label>
                </div>
                <div class="float-right">
                    <input type="number"
                           name="inputName"
                           id="FilmRate"
                           class="rating text-warning"
                           data-icon-lib="fa"
                           data-active-icon="fa-star fa-2x"
                           data-inactive-icon="fa-star-o fa-2x"
                           value="0" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="FilmModalConfirmButton" class="btn btn-primary">Save Film</button>
            </div>
        </div>
    </div>
</div>
@section scripts{
<script src="~/Content/js/bootstrap-datepicker.min.js"></script>
<script src="~/Content/js/bootstrap-datepicker.tr.min.js"></script>
<script src="~/Content/js/bootstrap4-rating-input.min.js"></script>
<script src="https://use.fontawesome.com/5ac93d4ca8.js"></script>

<script>
    var loading = null;
    $(document).ready(function () {
        SetDatePicker();
        loading = $('#myloader-wrapper');
        $(document).find("input[type=file]").each(function () {
            $(this).on('change', function () {
                var fileName = $(this).val();
                $(this).next('.custom-file-label').html(fileName.split("\\")[2]);
            })
        });
        $('#FilmModalConfirmButton').click(function () {
            SaveFilm();
        });
    });
    SetDatePicker = async () => {
        $('.datepicker').datepicker({
            format: "dd/mm/yyyy",
            todayBtn: "linked",
            language: "tr",
            autoclose: true
        });
    }
    ShowNewFilmModal = async () => {
        $('#NewFilmModal').modal('show');
    }

    SaveFilm = async () => {
        loading.show();
        let form = new FormData();
        form.append("FilmName", $('#FilmName').val());
        form.append("ReleaseDate", $('#ReleaseDate').val());
        form.append("Genre", $('#Genre').val());
        form.append("Director", $('#Director').val());
        form.append("FilmRate", $('#FilmRate').val());
        form.append("FilmDescription", $('#FilmDesc').val());
        form.append("TrailerLink", $('#TrailerLink').val());
        let File = document.getElementById('File1');
        if (File.files[0] != null) {
            form.append("Photo", File.files[0]);
        }
        let response = await fetch('/AddFilm',
            {
                method: 'POST',
                body: form
            });
        if (!response.ok) {
            throw new Error(response.statusText);
        }
        else {
            let result = await response.json();
            if (!result.Success) {
                loading.hide();
                alert(result.ErrorString);
            }
            else {
                loading.hide();
                alert("Film added successfully");
                location.href = '/Films';
            }
        }

    }
    DeleteFilm = async (FilmID) => {
        $('#DeleteButton').click(function () {
            ConfirmDelete(FilmID);
        });
        $('#DeleteModal').modal('show');
    }
    ConfirmDelete = async (FilmID) => {
        loading.show();
        let entity = {
            'ID': FilmID
        }
        try {
            let response = await fetch("/DeleteFilm",
                {
                    method: 'POST',
                    body: JSON.stringify(entity),
                    headers: {
                        Accept: 'application/json',
                        credentials: 'same-origin',
                        "Content-Type": 'application/json'
                    }
                }
            )
            if (!response.ok) {
                loading.hide();
                throw new Error(response.statusText);
            }
            else {
                let result = await response.json();
                if (!result.Success) {
                    loading.hide();
                    alert(result.ErrorString);
                }
                else {
                    loading.hide();
                    location.reload();
                }

            }

        } catch (e) {
            loading.hide();
            alert(e.message);
        }
    }
    EditFilm = async (FilmID) => {
        loading.show();
        let response = await fetch("/EditFilmForm/?FilmID=" + FilmID, {
            method: 'GET',
        });
        let html = await response.text();
        loading.hide();
        $('#FilmModalBody').html(html);
        $('#FilmModalConfirmButton').unbind('click');
        $('#FilmModalConfirmButton').click(function () {
            ConfirmEdit(FilmID);
        });
        $('#FilmModalTitle').text("Edit Film");
        $('#NewFilmModal').modal('show');
    }
    ConfirmEdit = async (FilmID) => {
        loading.show();
        let form = new FormData();
        form.append("FilmID",FilmID);
        form.append("FilmName", $('#FilmName').val());
        form.append("ReleaseDate", $('#ReleaseDate').val());
        form.append("Genre", $('#Genre').val());
        form.append("Director", $('#Director').val());
        form.append("FilmRate", $('#FilmRate').val());
        form.append("FilmDescription", $('#FilmDesc').val());
        form.append("TrailerLink", $('#TrailerLink').val());
        let File = document.getElementById('File1');
        if (File.files[0] != null) {
            form.append("Photo", File.files[0]);
        }
        try {
            let response = await fetch("/EditFilm",
                {
                    method: 'POST',
                    body: form
                }
            )
            if (!response.ok) {
                loading.hide();
                throw new Error(response.statusText);
            }
            else {
                let result = await response.json();
                if (!result.Success) {
                    loading.hide();
                    alert(result.ErrorString);
                }
                else {
                    loading.hide();
                    location.reload();
                }

            }

        } catch (e) {
            loading.hide();
            alert(e.message);
        }
    }
</script>
}

